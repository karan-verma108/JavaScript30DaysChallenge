{"mappings":";;;;;ACAA,MAAM,4CAAW,CAAC,MAAM;IACtB,OAAO,OAAO;AAChB;;;ACFA,MAAM,4CAAY;IAChB,MAAM;IACN,KAAK;IACL,YAAY;IACZ,SAAQ,KAAK,EAAE,UAAU;QACvB,IAAI,QAAQ,YACV,OAAO,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC;aAEpC,OAAO,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC;IAEtC;AACF;;;ACXA,MAAM,4CAAW,CAAC,MAAM;IACtB,IAAI,SAAS,KAAK,SAAS,GACzB,OAAO,CAAC,iCAAiC,CAAC;SAE1C,OAAO,CAAC,sBAAsB,EAAE,KAAK,KAAK,EAAE,KAAK,IAAI,EAAE,OAAO,KAAK,CAAC;AAExE;AAEA,MAAM,4CAAe,CAAC;IACpB,IAAI,OAAO,MAAM,GAAG;QAClB,IAAI,OAAO,QAAQ,GAAG;YACpB,IAAI,OAAO,QAAQ,GACjB,OAAO,CAAC,EAAE,KAAK,eAAe,CAAC;iBAE/B,OAAO,CAAC,EAAE,KAAK,mBAAmB,CAAC;QAEvC,OACE,OAAO,CAAC,EAAE,KAAK,eAAe,CAAC;IAEnC,OACE,OAAO,CAAC,EAAE,KAAK,mBAAmB,CAAC;AAEvC;AAEA,MAAM,4CAAe,CAAC;IACpB,IAAI,iBAAiB,EAAE;IACvB,IAAK,IAAI,IAAI,YAAY,MAAM,GAAG,GAAG,KAAK,GAAG,IAC3C,eAAe,IAAI,CAAC,WAAW,CAAC,EAAE;IAEpC,MAAM,cAAc,eAAe,IAAI,CAAC;IACxC,IAAI,gBAAgB,aAClB,OAAO,CAAC,sCAAsC,EAAE,YAAY,wBAAwB,EAAE,YAAY,CAAC;SAEnG,OAAO,CAAC,0CAA0C,EAAE,YAAY,wBAAwB,EAAE,YAAY,CAAC;AAE3G;;;ACnCA,MAAM,oCAAc,OAAO;IACzB,IAAI;QACF,MAAM,WAAW,MAAM,MAAM;QAC7B,MAAM,OAAO,MAAM,SAAS,IAAI;QAChC,OAAO;IACT,EAAE,OAAO,OAAO;QACd,OAAO;IACT;AACF;IAEA,2CAAe;;;ACVf,MAAM,4CAAO;AACb,MAAM,4CAAO;AACb,MAAM,4CAAsB,CAAC;IAC3B,IAAI,cACF,OAAO;SAEP,OAAO;AAEX;AAEA,MAAM,4CAAW;IACf,MAAM,OAAO,IAAI;IACjB,MAAM,OAAO,KAAK,kBAAkB;IACpC,OAAO;AACT;;;ALDA;;qDAEqD,GAErD;;;;;2EAK2E,GAE3E;;;;;;;;;;;;;;;;6DAgB6D,GAE7D;;;;;;;;;;MAUM,GAEN,qJAAqJ;AAErJ,MAAM,6BAAO,CAAA,GAAA,yCAAG;AAChB,MAAM,6BAAO,CAAA,GAAA,yCAAG;AAChB,MAAM,6BAAO,CAAA,GAAA,yCAAkB;AAC/B,MAAM,6BAAO,CAAA,GAAA,yCAAO;AAEpB,MAAM,+BAAS;UACb;UACA;UACA;UACA;AACF;AAEA,wCAAwC;AAExC,2GAA2G;AAE3G,uCAAuC;AAEvC,MAAM,iCAAW;AACjB,MAAM,+BAAS,CAAA,GAAA,aAAK,EAAE,OAAO,CAAC;AAC9B,mDAAmD;AAEnD,oHAAoH;AAEpH,MAAM,0CAAoB;IACxB,IAAI;QACF,MAAM,OAAO,MAAM,CAAA,GAAA,YAAI,EAAE,GAAG,CAAC;QAC7B,QAAQ,GAAG,CAAC,WAAW;IACzB,EAAE,OAAO,OAAO;QACd,QAAQ,GAAG,CAAC;IACd;AACF;AAEA,2CAEA,2JAA2J","sources":["index.js","addModule.js","objModule.js","multipleFn.js","firstDefaultFn.js","multipleConstNFun.js"],"sourcesContent":["import lodash from 'lodash';\r\nimport axios from 'axios';\r\nimport { addition } from './addModule.js';\r\nimport { personObj } from './objModule.js';\r\nimport { multiply, findLeapYear, isPalindrome } from './multipleFn.js';\r\nimport fetchAnyApi from './firstDefaultFn.js';\r\nimport {\r\n  year,\r\n  mood,\r\n  createGithubProfile,\r\n  showTime,\r\n} from './multipleConstNFun.js';\r\n\r\n/* 1) create a module that exports a function to add two numbers. Import and use this module in another script \r\nconst sumOfTwoNumbers = addition(5, 6);\r\nconsole.log(`sumOfTwoNumbers is ${sumOfTwoNumbers}`);*/\r\n\r\n/* 2) create a module that exports an object representing a person with properties and methods. Import and use this module in another script\r\n\r\nconsole.log(`The retrieved module is ${personObj}`);\r\nconsole.log(`The name is ${personObj.name}`);\r\nconsole.log(`The age is ${personObj.age}`);\r\nconsole.log(`Let's check if he is happy? ${personObj.isHappy(1000, 30)}`); */\r\n\r\n/* 3) create a module that exports multiple functions using named exports. Import and use these functions in another script\r\n\r\n// let's try these methods\r\n// first, multiply method\r\n\r\nconst multiplyResult = multiply(3, 9);\r\nconsole.log(`multiplyResult is ${multiplyResult}`);\r\n\r\n// second, findLeapYear function\r\n\r\nconst findLeapYearResult = findLeapYear(1700);\r\nconsole.log(`findLeapYear result is ${findLeapYearResult}`);\r\n\r\n// third, isPalindrome function\r\n\r\nconst isPalindromeResult = isPalindrome('meau');\r\nconsole.log(`isPalindrome result is ${isPalindromeResult}`); */\r\n\r\n/* 4) create a module that exports a single function using default export. Import and use this function in another script\r\n\r\n// let's try this fetch api method that is imported from another module\r\n\r\nfetchAnyApi('https://jsonplaceholder.typicode.com/users')\r\n  .then((data) => {\r\n    console.log('data ', data);\r\n  })\r\n  .catch((err) => {\r\n    console.log(err);\r\n  }); */\r\n\r\n//   5) create a module that exports multiple constants and functions. Import the entire module as an object in another script and use its properties\r\n\r\nconst key1 = year;\r\nconst key2 = mood;\r\nconst key3 = createGithubProfile;\r\nconst key4 = showTime;\r\n\r\nconst newObj = {\r\n  key1,\r\n  key2,\r\n  key3,\r\n  key4,\r\n};\r\n\r\n// console.log('newobj', newObj.key4());\r\n\r\n// 6) install a third party module lodash using npm. Import and use a function from this module in a script\r\n\r\n// using a function isArray from lodash\r\n\r\nconst notArray = '123';\r\nconst result = lodash.isArray(notArray);\r\n// console.log(`is notArray an array ? ${result}`);\r\n\r\n// 7) install a third party module axios using npm. Import and use this module to make a network request in a script\r\n\r\nconst letsFetchApiAgain = async () => {\r\n  try {\r\n    const data = await axios.get('https://jsonplaceholder.typicode.com/users');\r\n    console.log('data is', data);\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nletsFetchApiAgain();\r\n\r\n// 8) use a module bundler like webpack or parcel to bundle multiple javascript files into a single file. Write a script to demonstate the bundling process\r\n","const addition = (num1, num2) => {\r\n  return num1 + num2;\r\n};\r\n\r\nexport { addition };\r\n","const personObj = {\r\n  name: 'roy',\r\n  age: 70,\r\n  profession: 'developer',\r\n  isHappy(money, depression) {\r\n    if (money > depression) {\r\n      return `${this.name} is happy today`;\r\n    } else {\r\n      return `${this.name} is not happy`;\r\n    }\r\n  },\r\n};\r\n\r\nexport { personObj };\r\n","const multiply = (num1, num2) => {\r\n  if (num1 === 0 || num2 === 0) {\r\n    return `Please enter value greater than 0`;\r\n  } else {\r\n    return `The multiplication of ${num1} and ${num2} is ${num1 * num2}`;\r\n  }\r\n};\r\n\r\nconst findLeapYear = (year) => {\r\n  if (year % 4 === 0) {\r\n    if (year % 100 === 0) {\r\n      if (year % 400 === 0) {\r\n        return `${year} is a leap year`;\r\n      } else {\r\n        return `${year} is not a leap year`;\r\n      }\r\n    } else {\r\n      return `${year} is a leap year`;\r\n    }\r\n  } else {\r\n    return `${year} is not a leap year`;\r\n  }\r\n};\r\n\r\nconst isPalindrome = (receivedStr) => {\r\n  let reversedStrArr = [];\r\n  for (let i = receivedStr.length - 1; i >= 0; i--) {\r\n    reversedStrArr.push(receivedStr[i]);\r\n  }\r\n  const reversedStr = reversedStrArr.join('');\r\n  if (receivedStr === reversedStr) {\r\n    return `It is a palindrom, received string is ${receivedStr} and reversed string is ${reversedStr}`;\r\n  } else {\r\n    return `It is not a palindrom, received string is ${receivedStr} and reversed string is ${reversedStr}`;\r\n  }\r\n};\r\n\r\nexport { multiply, findLeapYear, isPalindrome };\r\n","const fetchAnyApi = async (apiUrl) => {\r\n  try {\r\n    const response = await fetch(apiUrl);\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    return 'Error fetching the api';\r\n  }\r\n};\r\n\r\nexport default fetchAnyApi;\r\n","const year = 2024;\r\nconst mood = 'good mood';\r\nconst createGithubProfile = (doesKnowCode) => {\r\n  if (doesKnowCode) {\r\n    return 'You can create your github profile';\r\n  } else {\r\n    return 'You cannot create github profile';\r\n  }\r\n};\r\n\r\nconst showTime = () => {\r\n  const date = new Date();\r\n  const time = date.toLocaleTimeString();\r\n  return time;\r\n};\r\n\r\nexport { year, mood, createGithubProfile, showTime };\r\n"],"names":[],"version":3,"file":"output.js.map"}